name: Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_REGION, AWS_SQS_URL
          script: |
            # Debugging environment variables
            echo "AWS_ACCESS_KEY_ID is set: ${AWS_ACCESS_KEY_ID:+set}"
            echo "AWS_REGION is: $AWS_REGION"
            echo "AWS_SQS_URL is: $AWS_SQS_URL"

            # Navigate to the project directory
            cd sqs-polling || exit 1  # Exit if directory is not found

            # Pull the latest code from the main branch
            git pull origin main || exit 1  # Exit if git pull fails

            # Build Docker image
            sudo docker build -t sqs-poller . || exit 1  # Exit if build fails

            # Stop and remove previous containers
            sudo docker stop $(sudo docker ps -q --filter ancestor=sqs-poller) || true
            sudo docker rm $(sudo docker ps -aq --filter ancestor=sqs-poller) || true

            # Run Docker container
            sudo docker run -d --restart unless-stopped \
              -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
              -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
              -e AWS_REGION=$AWS_REGION \
              -e AWS_SQS_URL=$AWS_SQS_URL \
              sqs-poller || exit 1  # Exit if docker run fails
